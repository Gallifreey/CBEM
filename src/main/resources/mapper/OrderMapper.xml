<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sd.mapper.OrderMapper">

    <resultMap id="BaseResultMap" type="com.sd.entity.Order">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="description" column="description" jdbcType="VARCHAR"/>
            <result property="source" column="source" jdbcType="INTEGER"/>
            <result property="target" column="target" jdbcType="INTEGER"/>
            <result property="publishtime" column="publishTime" jdbcType="TIMESTAMP"/>
            <result property="pricemeta" column="priceMeta" jdbcType="OTHER"/>
            <result property="infometa" column="infoMeta" jdbcType="OTHER"/>
            <result property="manifestmeta" column="manifestMeta" jdbcType="OTHER"/>
            <result property="state" column="state" jdbcType="SMALLINT"/>
            <result property="paytime" column="payTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,`name`,description,
        `source`,target,publishTime,
        priceMeta,infoMeta,manifestMeta,
        `state`,paytime
    </sql>
    <!-- 插入新订单 -->
    <insert id="createOrder" parameterType="com.sd.entity.Order">
        insert into `order` (name, description, source, target, publishTime, priceMeta, infoMeta, manifestMeta, state, payTime)
        values (#{name}, #{description}, #{source}, #{target}, #{publishtime}, #{pricemeta}, #{infometa}, #{manifestmeta}, #{state}, #{paytime})
    </insert>

    <!-- 删除订单 -->
    <delete id="deleteOrder" parameterType="int">
        delete
        from `order`
        where id = #{id};
    </delete>
    <!-- 批量删除-->
    <delete id="deleteOrders" parameterType="list">
        delete
        from `order`
        where id
        in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>
    <!-- 更新订单 -->
    <update id="updateOrder" parameterType="com.sd.entity.Order">
        update `order`
        set name = #{name},
            description = #{description},
            source = #{source},
            target = #{target},
            publishTime = #{publishtime},
            priceMeta = #{pricemeta},
            infoMeta = #{infometa},
            manifestMeta = #{manifestmeta},
            state = #{state},
            payTime = #{paytime}
        where id = #{id};
    </update>

    <!-- 查询所有订单 -->
    <select id="findAllOrder" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `order`;
    </select>
    <!-- 根据发起人，接收人和日期查询订单 -->
    <select id="queryOrder" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `order`
        where source=#{source}
        and target=#{target}
        and publishTime=#{publishtime};
    </select>
    <!-- 查询用户订单 -->
    <select id="findOrdersById" resultMap="BaseResultMap">
        select *
        from `order`
        where id=#{uid};
    </select>
    <!--    没写-->
    <select id="getBom" resultMap="BaseResultMap">
        select *
        from `order`
        where id=#{id};
    </select>
    <!--    没写-->
    <select id="getUserList" resultMap="BaseResultMap">
        select *
        from `order`
        where uid=#{uid};
    </select>
    <!--   没写 -->
    <select id="queryByNPPPS" resultMap="BaseResultMap">
        select *
        <include refid="Base_Column_List"/>
        from `order`
        where name=#{name}
        or price=#{price}
        or publistTime=#{publishtime}
        or payTime=#{paytime}
        or status=#{status}
        ;
    </select>
</mapper>
